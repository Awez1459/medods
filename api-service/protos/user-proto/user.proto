syntax = "proto3";

package user;

service UserService {
    rpc Create(User) returns (User);
    rpc Get(Filter) returns (GetUser);
    rpc ListDeletedUsers(ListUsersReq) returns (ListUsersRes);
    rpc ListUsers(ListUsersReq) returns (ListUsersRes);
    rpc Update(User) returns (User);
    rpc SoftDelete(Id) returns (DelRes);

    rpc CheckUniquess(FV) returns (Status);
    rpc Exists (FV) returns (User);
}

message DelRes {}

message Id {
    string id = 1;
}

message FV {
    string field = 1;
    string value = 2;
}

message Status {
    int32 code = 1;
}

message Filter {
    map<string, string> filter = 1;
}

message ListUsersReq {
    uint64 limit = 1;
    uint64 offset = 2;
    FV fv = 3;
}

message ListUsersRes {
    repeated UserList users = 1;
    int64 count = 2;
}

message UserList {
    string id = 1;
    string full_name = 2;
    string email = 3;
    string date_of_birth = 5;
    string profile_img = 6;
    string card = 7;
    string gender = 8;
    string phone_number = 9;
    string role = 10;
    string refresh_token = 11;
    string created_at = 12;
    string updated_at = 13;
    string deleted_at = 14;
}

message User {
    string id = 1;
    string full_name = 2;
    string email = 3;
    string password = 4;
    string date_of_birth = 5;
    string profile_img = 6;
    string card = 7;
    string gender = 8;
    string phone_number = 9;
    string role = 10;
    string refresh_token = 11;
    string created_at = 12;
    string updated_at = 13;
    string deleted_at = 14;
}

message GetUser {
    User user = 1;
}
